<%- include('../partials/layout-start') %>

<div class="container-sm book-container">
    <h1><%= book.title %></h1>
    <p><strong>Authors:</strong> <%= book.authors %></p>
    <p><strong>Description:</strong> <%= book.description %></p>
   <div class="mb-3 form-check">
     <input
       type="checkbox"
       id="favorite"
       name="favorite"
       class="form-check-input"
        <%= book.favorites.some(fav => fav._id.equals(user._id)) ? "checked" : "" %>
       onchange="toggleFavorite('<%= book._id %>')"
     />
     <label for="favorite" class="form-check-label">Add to favorites</label>
   </div>
   <p>
     <strong>Favorites:</strong>
     <span id="favorites-count"><%= book.favorites.length %></span> users added this book to favorites.
   </p>
    <% if (book.filePath) { %>
    <img
            src="<%= book.filePath %>"
            alt="Book Thumbnail"
            style="max-width: 200px"
    />
    <% } %>
    <p><strong>Views:</strong> <%= views %></p>
    <div class="button-container">
        <% if (user && book.user._id.toString() === user.id) { %>
        <a href="/books/update/<%= book._id %>" class="btn btn-warning">Edit</a>
        <form
            action="/books/delete/<%= book._id %>"
            method="POST"
            style="display: inline"
        >
            <button type="submit" class="btn btn-danger">Delete</button>
        </form>
        <% } %>
        <a href="/books" class="btn btn-secondary">Back to List</a>
    </div>

    <h3 class="mt-4">Comments</h3>
    <div class="mb-3">
        <div class="form-group">
            <textarea
                placeholder="message"
                class="form-control"
                id="text"
            ></textarea>
        </div>
        <button type="submit" id="send-comment" class="btn btn-primary">Send</button>
    </div>

    <div id="comments-list" class="mb-3">
        <div id="list" class="list-group">
            <% book.comments.reverse().forEach(comment => { %>
            <div class="list-group-item list-group-item-action">
                <p class="mb-1 comment-text"><%= comment.text %></p>
                <small>
                    <strong><%= comment.user.username %></strong> -
                    <%= new Date(comment.createdAt).toLocaleString('ru-RU', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' }) %>
                </small>
                <% if (user && comment.user._id.toString() === user.id) { %>
                <div class="mt-2">
                    <button class="btn-sm btn-warning edit-comment" data-comment-id="<%= comment._id %>" title="Edit">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn-sm btn-danger delete-comment" data-comment-id="<%= comment._id %>" title="Delete">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>

                <div id="edit-form-<%= comment._id %>" class="edit-form mt-2" style="display: none;">
                    <textarea class="form-control edit-text"><%= comment.text %></textarea>
                    <button class="btn-sm btn-success mt-2 save-edit" data-comment-id="<%= comment._id %>" title="Save">
                        <i class="bi bi-check"></i> <!-- Иконка сохранения -->
                    </button>
                    <button class="btn-sm btn-secondary mt-2 cancel-edit" data-comment-id="<%= comment._id %>" title="Cancel">
                        <i class="bi bi-x"></i> <!-- Иконка отмены -->
                    </button>
                </div>
                <% } %>
            </div>
            <% }) %>
        </div>

        <% if (commentsTotalPages > 1) { %>
          <%- include('../partials/pagination', {
            baseUrl: `/books/${book._id}`,
            currentPage: commentsPage,
            totalPages: commentsTotalPages,
            limit: commentsLimit,
            search: "",
            author: "",
            sort: ""
          }) %>
        <% } %>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const commentsList = document.getElementById("comments-list");
        if (commentsList && window.location.hash === "#comments-list") {
          commentsList.scrollIntoView({ behavior: "smooth" });
        }
      });
    </script>

   <script src="/socket.io/socket.io.js"></script>
   <script>
       const socket = io("/", { query: { bookId: "<%= book._id %>" } });

       const boxList = document.querySelector("#list");
       const sendComment = document.querySelector("#send-comment");
       const inputText = document.querySelector("#text");
       const favoriteCheckbox = document.querySelector("#favorite");
       const favoritesCount = document.querySelector("#favorites-count");

       const getCommentTemplate = (msg) => {
           const dateOptions = { day: "2-digit", month: "2-digit", year: "numeric", hour: "2-digit", minute: "2-digit" };
           const formattedDate = new Date(msg.createdAt).toLocaleString("ru-RU", dateOptions);

           return `
               <div class="list-group-item list-group-item-action">
                   <p class="mb-1 comment-text">${msg.text}</p>
                   <small>
                       <strong>${msg.user.username}</strong> - ${formattedDate}
                   </small>
                   <div class="mt-2">
                       <button class="btn-sm btn-warning edit-comment" data-comment-id="${msg._id}" title="Edit">
                           <i class="bi bi-pencil"></i>
                       </button>
                       <button class="btn-sm btn-danger delete-comment" data-comment-id="${msg._id}" title="Delete">
                           <i class="bi bi-trash"></i>
                       </button>
                   </div>
                   <div id="edit-form-${msg._id}" class="edit-form mt-2" style="display: none;">
                       <textarea class="form-control edit-text">${msg.text}</textarea>
                       <button class="btn-sm btn-success mt-2 save-edit" data-comment-id="${msg._id}" title="Save">
                           <i class="bi bi-check"></i>
                       </button>
                       <button class="btn-sm btn-secondary mt-2 cancel-edit" data-comment-id="${msg._id}" title="Cancel">
                           <i class="bi bi-x"></i>
                       </button>
                   </div>
               </div>
           `;
       };

       socket.on("newComment", (msg) => {
           boxList.insertAdjacentHTML("afterbegin", getCommentTemplate(msg));
       });

       sendComment.addEventListener("click", () => {

           socket.emit("newComment", {
               text: inputText.value,
               user: "<%= user.id %>",
           });
           inputText.value = "";
       });

       document.addEventListener("click", (e) => {
           const target = e.target;
           const commentId = target.getAttribute("data-comment-id");

           if (target.classList.contains("delete-comment")) {
               socket.emit("deleteComment", { commentId, user: "<%= user.id %>" });
           }

           if (target.classList.contains("edit-comment")) {
               document.querySelector(`#edit-form-${commentId}`).style.display = "block";
           }

           if (target.classList.contains("cancel-edit")) {
               document.querySelector(`#edit-form-${commentId}`).style.display = "none";
           }

           if (target.classList.contains("save-edit")) {
               const newText = document.querySelector(`#edit-form-${commentId} .edit-text`).value;
               socket.emit("updateComment", { commentId, text: newText, user: "<%= user.id %>" });
           }
       });

       socket.on("commentDeleted", ({ commentId }) => {
           document.querySelector(`[data-comment-id="${commentId}"]`)?.closest(".list-group-item")?.remove();
       });

       socket.on("commentUpdated", ({ commentId, text }) => {
           const commentElement = document.querySelector(`[data-comment-id="${commentId}"]`)?.closest(".list-group-item");
           if (commentElement) {
               commentElement.querySelector(".comment-text").textContent = text;
               commentElement.querySelector(".edit-form").style.display = "none";
           }
       });

       favoriteCheckbox.addEventListener("change", () => {
           socket.emit("toggleFavorite", {
               bookId: "<%= book._id %>" || null,
               user: "<%= user.id %>" || null,
           });
       });

       socket.on("favoriteUpdated", ({ bookId, favorites }) => {
           if (bookId === "<%= book._id %>") {
               favoritesCount.textContent = favorites;
           }
       });

       const handleSocketError = ({ message }) => alert(message);

              socket.on("deleteCommentError", handleSocketError);
              socket.on("updateCommentError", handleSocketError);
              socket.on("toggleFavoriteError", handleSocketError);

   </script>

<%- include('../partials/layout-end') %>
